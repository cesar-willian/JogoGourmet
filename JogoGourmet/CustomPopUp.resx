<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rEcwqjWbYgAAAABJRU5ErkJggg==
</value>
  </data>
</root>